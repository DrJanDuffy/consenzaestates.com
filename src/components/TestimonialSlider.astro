
---
const { testimonials } = Astro.props;
---

<div class="testimonial-slider">
  <div class="testimonial-container">
    {testimonials.map((testimonial, index) => (
      <div class="testimonial-slide" data-index={index}>
        <div class="testimonial-content">
          <div class="quote-mark">"</div>
          <p class="testimonial-text">{testimonial.text}</p>
          <div class="testimonial-author">
            <div class="author-info">
              <strong>{testimonial.author}</strong>
              <span>{testimonial.title}</span>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
  <div class="slider-controls">
    <button class="prev-btn" aria-label="Previous testimonial">
      ←
    </button>
    <div class="slider-dots">
      {testimonials.map((_, index) => (
        <button class="dot" data-index={index} aria-label={`Go to testimonial ${index + 1}`}></button>
      ))}
    </div>
    <button class="next-btn" aria-label="Next testimonial">
      →
    </button>
  </div>
</div>

<script>
  // Initialize the testimonial slider
  document.addEventListener('DOMContentLoaded', () => {
    const slides = document.querySelectorAll('.testimonial-slide');
    const dots = document.querySelectorAll('.dot');
    const prevBtn = document.querySelector('.prev-btn');
    const nextBtn = document.querySelector('.next-btn');
    
    let currentIndex = 0;
    const slideCount = slides.length;
    
    function goToSlide(index) {
      // Validate index bounds
      if (index < 0) index = slideCount - 1;
      if (index >= slideCount) index = 0;
      
      // Update current index
      currentIndex = index;
      
      // Update slides visibility
      slides.forEach((slide, i) => {
        if (i === currentIndex) {
          slide.classList.add('active');
        } else {
          slide.classList.remove('active');
        }
      });
      
      // Update dots active state
      dots.forEach((dot, i) => {
        if (i === currentIndex) {
          dot.classList.add('active');
        } else {
          dot.classList.remove('active');
        }
      });
    }
    
    // Initialize first slide
    goToSlide(0);
    
    // Event listeners
    prevBtn.addEventListener('click', () => goToSlide(currentIndex - 1));
    nextBtn.addEventListener('click', () => goToSlide(currentIndex + 1));
    
    dots.forEach((dot, i) => {
      dot.addEventListener('click', () => goToSlide(i));
    });
    
    // Auto-advance slides every 5 seconds
    setInterval(() => goToSlide(currentIndex + 1), 5000);
  });
</script>

<style>
  .testimonial-slider {
    position: relative;
    margin: 3rem 0;
    padding: 2rem 0;
  }
  
  .testimonial-container {
    position: relative;
    height: 320px;
    overflow: hidden;
  }
  
  .testimonial-slide {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 0.8s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .testimonial-slide.active {
    opacity: 1;
    z-index: 1;
  }
  
  .testimonial-content {
    max-width: 800px;
    text-align: center;
    padding: 2rem;
    background: linear-gradient(to bottom, rgba(255,255,255,0.7), rgba(255,255,255,0.9));
    border-radius: 8px;
    box-shadow: var(--luxury-shadow-md);
    position: relative;
  }
  
  .quote-mark {
    font-family: var(--serif-font);
    font-size: 6rem;
    position: absolute;
    top: -20px;
    left: 20px;
    color: var(--luxury-gold);
    opacity: 0.3;
  }
  
  .testimonial-text {
    font-family: var(--serif-font);
    font-size: 1.2rem;
    line-height: 1.8;
    margin-bottom: 1.5rem;
    color: var(--luxury-black);
  }
  
  .testimonial-author {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 1rem;
  }
  
  .author-info {
    display: flex;
    flex-direction: column;
    text-align: center;
  }
  
  .author-info strong {
    color: var(--luxury-black);
    margin-bottom: 4px;
  }
  
  .author-info span {
    color: var(--luxury-gray);
    font-size: 0.9rem;
  }
  
  .slider-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 1.5rem;
  }
  
  .prev-btn, .next-btn {
    background: transparent;
    border: none;
    color: var(--luxury-gold);
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.5rem;
    transition: transform 0.3s ease;
  }
  
  .prev-btn:hover, .next-btn:hover {
    transform: scale(1.2);
    color: var(--luxury-accent);
  }
  
  .slider-dots {
    display: flex;
    gap: 8px;
    margin: 0 1rem;
  }
  
  .dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: var(--luxury-gray);
    opacity: 0.4;
    cursor: pointer;
    border: none;
    transition: all 0.3s ease;
  }
  
  .dot.active, .dot:hover {
    background-color: var(--luxury-gold);
    opacity: 1;
    transform: scale(1.2);
  }
</style>
