---
import { Button, FormInput, FormSelect, FormTextarea } from '@components/odyssey-theme';

const selectOptions = [
  "Google Search",
  "Social Media",
  "Email",
]

---

<form id="contactForm" name="Contact Form" method="POST">
  <input type="hidden" name="formType" value="contact" />
  <div class="form-group">
    <label for="firstName">First Name</label>
    <input type="text" name="firstName" id="firstName" required />
  </div>
  <div class="form-group">
    <label for="lastName">Last Name</label>
    <input type="text" name="lastName" id="lastName" required />
  </div>
  <div class="form-group">
    <label for="email">Email</label>
    <input type="email" name="email" id="email" required />
  </div>
  <div class="form-group">
    <label for="phone">Phone</label>
    <input type="tel" name="phone" id="phone" />
  </div>
  <div class="form-group">
    <label for="message">Message</label>
    <textarea name="message" id="message" cols="30" rows="4" required></textarea>
  </div>
  <Button id="contactSubmitBtn">Submit</Button>
  <div id="formStatus" class="form-status"></div>
</form>

<script>
  // This script requires a file named 'followUpBoss.js' in the '../../utils' directory
  //  This file should contain the functions sendToFollowUpBoss and formatContactFormData.
  //  Example implementation in followUpBoss.js is shown below.
  import { sendToFollowUpBoss, formatContactFormData } from '../../utils/followUpBoss.js';

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contactForm');
    const formStatus = document.getElementById('formStatus');

    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();

        try {
          const formData = new FormData(form);
          const formDataObj = {};

          for (const [key, value] of formData.entries()) {
            formDataObj[key] = value;
          }

          formStatus.textContent = 'Sending your information...';
          formStatus.className = 'form-status sending';

          const leadData = formatContactFormData(formDataObj);
          await sendToFollowUpBoss(leadData);

          formStatus.textContent = 'Thank you! Your message has been sent.';
          formStatus.className = 'form-status success';
          form.reset();

          // Redirect after 2 seconds
          setTimeout(() => {
            window.location.href = '/contact-thank-you';
          }, 2000);

        } catch (error) {
          console.error('Form submission error:', error);
          formStatus.textContent = 'There was an error sending your message. Please try again.';
          formStatus.className = 'form-status error';
        }
      });
    }
  });
</script>

<style>
  form {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  label {
    font-weight: bold;
    font-size: var(--font-size-sm);
    margin-bottom: 0.5rem;
  }

  input, textarea, select {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid var(--neutral-600);
    border-radius: 0.25rem;
    font-size: var(--font-size-md);
  }

  input::placeholder, textarea::placeholder, select::placeholder {
    color: var(--neutral-500);
  }

  input:focus, textarea:focus, select:focus {
    border-color: var(--primary-300);
    outline: none;
  }

  .form-status {
    margin-top: 1rem;
    padding: 0.75rem;
    border-radius: 0.25rem;
    font-weight: bold;
    text-align: center;
  }

  .sending {
    background-color: #f0f0f0;
    color: #666;
  }

  .success {
    background-color: #e6f7e6;
    color: #2c662d;
  }

  .error {
    background-color: #ffecec;
    color: #cc0033;
  }
</style>